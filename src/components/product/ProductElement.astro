---
interface Props {
    product: Root;
    offerPrice?:string;
}

const { product }: Props = Astro.props;
const { id, title, price, description, category, image, rating, url, discount, oldPrice } = product;
const {offerPrice} =Astro.props

---

<div class="product_content">
  <a href={`/san-pham/${product.url}`} class="group">
    <div class="bg-white rounded-lg shadow-sm overflow-hidden hover:shadow-md transition-shadow duration-300">
      <div class="relative aspect-square overflow-hidden">
        <img 
          src={product.mainImage} 
          alt={product.title}
          class="w-full h-full object-cover object-center group-hover:scale-105 transition-transform duration-300"
        />
        {product.calculatedDiscount && (
          <div class="absolute top-2 left-2 bg-accent-500 text-white text-xs font-bold px-2 py-1 rounded">
            -{product.calculatedDiscount}%
          </div>
        )}
      </div>
      <div class="p-4">
        <h3 class="text-gray-800 font-medium text-sm line-clamp-2 mb-2 group-hover:text-primary-600 transition-colors">{product.title}</h3>
        <div class="flex flex-wrap items-center mb-1 md:space-x-2">
          <span class="text-gray-900 font-semibold">{formatPrice(product.price)}</span>
          {product.calculatedDiscount && (
            <span class="text-gray-500 text-xs line-through">{formatPrice(getDiscountedPrice(product.price, product.calculatedDiscount))}</span>
          )}
        </div>
      </div>
    </div>
  </a>
</div>
