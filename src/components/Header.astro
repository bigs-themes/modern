---
import { Input, Badge } from '@/components/ui';
import { shopStyleService } from '@/services/ShopStyleService';

// Lấy shop alias từ subdomain
const url = new URL(Astro.request.url);
const host = url.hostname;
const shopAlias = host ? host.split('.')[0] : '';

// Lấy logo URL
let primaryLogoUrl = null;
try {
  primaryLogoUrl = await shopStyleService.getPrimaryLogoUrl(shopAlias);
} catch (error) {
  console.error('Error loading logo:', error);
}
---

<header class="sticky top-0 z-50 bg-white shadow-sm">
  <div class="max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center py-4">
      <!-- Logo -->
      <div class="flex items-center">
        <a id="logo-header" href="/" class="flex items-center">
          <!-- Logo cho live preview - luôn có sẵn -->
          <img 
            src={primaryLogoUrl || ''} 
            alt="Logo" 
            class="header-logo h-8 w-auto object-contain"
            style={primaryLogoUrl ? 'display: block;' : 'display: none;'}
            onerror="this.style.display='none'; this.nextElementSibling.style.display='block';"
          />
          
          <!-- Text logo fallback -->
          <span class="text-2xl font-bold text-primary" style={primaryLogoUrl ? 'display: none;' : 'display: block;'}>
            BigS
          </span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex space-x-8">
        <a href="/" class="text-neutral hover:text-primary font-medium">Trang chủ</a>
        <a href="/san-pham" class="text-neutral hover:text-primary font-medium">Sản phẩm</a>
        <a href="/gioi-thieu" class="text-neutral hover:text-primary font-medium">Giới thiệu</a>
        <a href="/lien-he" class="text-neutral hover:text-primary font-medium">Liên hệ</a>
      </nav>

      <!-- Search Bar Desktop -->
      <div class="hidden md:flex items-center flex-1 max-w-xs mx-4">
        <div class="w-full relative">
          <Input
            type="search"
            placeholder="Tìm kiếm sản phẩm..."
            size="md"
            class="pl-10"
          />
          <svg
            class="absolute left-3 top-2.5 h-5 w-5 text-secondary"
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <circle cx="11" cy="11" r="8"></circle>
            <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
          </svg>
        </div>
      </div>

      <!-- Cart & Menu -->
      <div class="flex items-center space-x-4">
        <a href="/gio-hang" class="cart-icon text-secondary hover:text-primary relative">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="h-6 w-6"
          >
            <circle cx="9" cy="21" r="1"></circle>
            <circle cx="20" cy="21" r="1"></circle>
            <path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>
          </svg>
          <div id="header-cart-count" class="absolute -top-2 -right-2">
            <Badge 
              variant="error" 
              size="sm" 
              class="cart-count"
            >
              0
            </Badge>
          </div>
        </a>
        
        <!-- Mobile Menu Button -->
        <button class="md:hidden text-secondary" id="mobile-menu-button">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="h-6 w-6"
          >
            <line x1="3" y1="12" x2="21" y2="12"></line>
            <line x1="3" y1="6" x2="21" y2="6"></line>
            <line x1="3" y1="18" x2="21" y2="18"></line>
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile Menu -->
  <div class="md:hidden hidden bg-white pb-4 px-4" id="mobile-menu">
    <div class="flex items-center mb-4 relative">
      <Input
        type="search"
        placeholder="Tìm kiếm sản phẩm..."
        size="md"
        class="pl-10"
      />
      <svg
        class="absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-secondary"
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <circle cx="11" cy="11" r="8"></circle>
        <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
      </svg>
    </div>
    <div class="flex flex-col space-y-3">
      <a href="/" class="text-neutral py-2 hover:text-primary font-medium">Trang chủ</a>
      <a href="/san-pham" class="text-neutral py-2 hover:text-primary font-medium">Sản phẩm</a>
      <a href="/gioi-thieu" class="text-neutral py-2 hover:text-primary font-medium">Giới thiệu</a>
      <a href="/lien-he" class="text-neutral py-2 hover:text-primary font-medium">Liên hệ</a>
      <a href="/tra-cuu-don-hang" class="text-neutral py-2 hover:text-primary font-medium">Tra cứu đơn hàng</a>
    </div>
  </div>
</header>

<script>
  import { Cart } from '../utils/cart';

  // Initialize cart and setup when DOM is ready
  document.addEventListener('DOMContentLoaded', () => {
    // Initialize cart
    const cart: any = new Cart();
    
    // Update header cart count
    function updateHeaderCartCount() {
      const cartCountElement = document.getElementById('header-cart-count');
      if (cartCountElement) {
        const totalItems = cart.items.reduce((sum: number, item: any) => sum + item.quantity, 0);

        const badgeElement = cartCountElement.querySelector('.cart-count');
        if (badgeElement) {
          badgeElement.textContent = totalItems.toString();
          
          // Hide badge if cart is empty
          if (totalItems === 0) {
            cartCountElement.classList.add('hidden');
          } else {
            cartCountElement.classList.remove('hidden');
          }
          // console.log('Updated badge text to:', totalItems.toString());
        }
      }
    }

    // Override the Cart class updateCartUI method to also update header
    const originalUpdateCartUI = cart.updateCartUI.bind(cart);
    cart.updateCartUI = function() {
      originalUpdateCartUI();
      updateHeaderCartCount();
    };

    // Update cart count on page load
    updateHeaderCartCount();

    // Listen for cart changes from localStorage
    window.addEventListener('storage', (e) => {
      if (e.key === 'cart') {
        cart.items = cart.loadCart();
        updateHeaderCartCount();
      }
    });

    // Listen for custom cart change events
    window.addEventListener('cartUpdated', () => {
      updateHeaderCartCount();
    });

    // Mobile menu toggle
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');

    mobileMenuButton?.addEventListener('click', () => {
      mobileMenu?.classList.toggle('hidden');
    });

    // Export cart to window for global access
    window.cart = cart;
  });
</script>